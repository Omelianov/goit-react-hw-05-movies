{"version":3,"file":"static/js/review-view.886e5aa3.chunk.js","mappings":"6OAAeA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,mFACgB,mCACNC,EAFV,6CAE2DD,EAF3D,YAGUE,EAHV,mBACgB,mCADhB,mCAK2BC,MAAM,GAAD,OAAIF,GAAJ,OAAeC,IAL/C,cAKUE,EALV,gBAMuBA,EAASC,OANhC,cAMUC,EANV,yBAQWA,GARX,mEAWA,I,QAAA,E,SAX+B,GAAhBP,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,mDCGFQ,EAAOC,EAAAA,EAAAA,GAAH,sBAEJC,EAAOD,EAAAA,EAAAA,GAAH,kGACYE,EAAAA,IAKhBC,EAAQH,EAAAA,EAAAA,GAAH,8DACPI,EAAAA,IAIEC,EAAOL,EAAAA,EAAAA,EAAH,2C,SCZjB,SAASM,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACrB,OACE,SAACC,EAAA,EAAD,CAAWC,WAAS,EAApB,UACE,SAACV,EAAD,UACGQ,EAAQG,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC1B,OACE,UAACZ,EAAD,YACE,SAACE,EAAD,UAAQS,KACR,SAACP,EAAD,UAAOQ,MAFEF,EAKd,OAIR,CAEDL,EAAYQ,UAAY,CACtBP,QAASQ,IAAAA,QACPA,IAAAA,MAAgB,CACdJ,GAAII,IAAAA,OACJH,OAAQG,IAAAA,OACRF,KAAME,IAAAA,UAERC,YAGJ,QCMA,MA/BA,WACI,IAAQxB,GAAYyB,EAAAA,EAAAA,MAAZzB,QACR,GAA8B0B,EAAAA,EAAAA,UAAS,MAAvC,eAAOX,EAAP,KAAgBY,EAAhB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACN7B,EAAgBC,GAAS6B,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACvBC,EAAa,GAEnBD,EAAQZ,KAAI,YAA8B,IAChCc,EAAS,CACXb,GAFiC,EAA1BA,GAGPC,OAHiC,EAAtBA,OAIXC,KAJiC,EAAdY,SAOvB,OAAOF,EAAWG,KAAKF,EAC1B,IAEDL,EAAWI,EACd,GACJ,GAAE,CAAC/B,IAEGe,GAAWA,EAAQoB,OAAS,GAC/B,SAAC,EAAD,CAAapB,QAASA,KAEtB,SAACC,EAAA,EAAD,CAAWC,WAAS,EAApB,UACI,sEAGX,C","sources":["API/get-movie-reviews.js","components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","pages/Reviews.js"],"sourcesContent":["async function getMovieReviews(movieId) {\n    const KEY = '2d0cc810611b68a053d01f920b18df6a';\n    const BASE_URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n    const filter = `?api_key=${KEY}&language=en-US&page=1`;\n\n    const response = await fetch(`${BASE_URL}${filter}`);\n    const data = await response.json();\n\n    return data;\n}\n\nexport default getMovieReviews;","import styled from '@emotion/styled';\nimport { accentBgColor, accentTextColor } from 'utilities/variables/css';\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li`\n  border-bottom: 1px solid ${accentBgColor};\n  padding: 15px;\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  color: ${accentTextColor};\n  margin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\n  line-height: 2;\n`;\n","import propTypes from 'prop-types';\nimport Container from 'components/Container';\nimport { List, Item, Title, Text } from './ReviewsList.styled';\n\nfunction ReviewsList({ reviews }) {\n  return (\n    <Container isPadding>\n      <List>\n        {reviews.map(({ id, author, text }) => {\n          return (\n            <Item key={id}>\n              <Title>{author}</Title>\n              <Text>{text}</Text>\n            </Item>\n          );\n        })}\n      </List>\n    </Container>\n  );\n}\n\nReviewsList.prototype = {\n  reviews: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      author: propTypes.string,\n      text: propTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default ReviewsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getMovieReviews from 'API/get-movie-reviews';\nimport ReviewsList from 'components/ReviewsList';\nimport Container from 'components/Container';\n\nfunction Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null);\n\n    useEffect(() => {\n        getMovieReviews(movieId).then(({ results }) => {\n            const reviewsArr = [];\n\n            results.map(({ id, author, content }) => {\n                const review = {\n                    id,\n                    author,\n                    text: content,\n                };\n\n                return reviewsArr.push(review);\n            });\n\n            setReviews(reviewsArr);\n        });\n    }, [movieId]);\n\n    return reviews && reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n    ) : (\n        <Container isPadding>\n            <h2>We don't have any reviews for this movie</h2>\n        </Container>\n    );\n}\n\nexport default Reviews;\n"],"names":["getMovieReviews","movieId","BASE_URL","filter","fetch","response","json","data","List","styled","Item","accentBgColor","Title","accentTextColor","Text","ReviewsList","reviews","Container","isPadding","map","id","author","text","prototype","propTypes","isRequired","useParams","useState","setReviews","useEffect","then","results","reviewsArr","review","content","push","length"],"sourceRoot":""}